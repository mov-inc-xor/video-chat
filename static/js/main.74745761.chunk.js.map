{"version":3,"sources":["../node_modules/peerjs/dist sync","components/ClipboardField.tsx","pages/StartPage.tsx","components/RoundSwitcher.tsx","redux/selectors.ts","redux/actionTypes.ts","redux/actions.ts","components/BottomPanel.tsx","components/LocalVideo.tsx","components/FullSizeVideo.tsx","components/ChatPanel.tsx","components/ChatSendPanel.tsx","hooks/useTextField.ts","components/Chat.tsx","components/ChatMessage.tsx","pages/MeetingPage.tsx","App.tsx","hooks/usePeer.ts","reportWebVitals.ts","redux/reducers/devices.ts","redux/reducers/chat.ts","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","ClipboardField","text","useState","snackbarOpened","setSnackbarOpened","handleClose","TextField","type","value","fullWidth","disabled","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","copy","edge","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","message","action","size","color","fontSize","useStyles","makeStyles","theme","container","height","display","alignItems","justifyContent","paper","padding","spacing","marginTop","backdrop","zIndex","drawer","flexDirection","StartPage","peer","classes","backdropOpened","setBackdropOpened","remotePeerId","setRemotePeerId","CssBaseline","Container","maxWidth","className","Paper","variant","Grid","direction","item","Typography","gutterBottom","onChange","target","replaceAll","label","callUser","catch","reason","alert","finally","Backdrop","endCall","CircularProgress","RoundSwitcher","iconOn","iconOff","initialValue","toggle","isOn","setIsOn","getDevicesState","store","devices","getChatState","chat","isAudioEnabled","state","audio","isVideoEnabled","video","TOGGLE_AUDIO","TOGGLE_VIDEO","OPEN_CHAT","CLOSE_CHAT","ENABLE_MSG_BADGE","DISABLE_MSG_BADGE","toggleAudio","toggleVideo","panel","bottom","background","borderRadius","width","margin","connect","audioEnabled","videoEnabled","dispatch","toggleChatOpened","newMessages","Divider","orientation","flexItem","Badge","invisible","top","left","objectFit","backgroundColor","boxShadow","LocalVideo","React","forwardRef","props","ref","muted","autoPlay","maxHeight","FullSizeVideo","TabPanel","children","index","other","role","hidden","aria-labelledby","flexShrink","drawerPaper","overflow","drawerHeader","mixins","toolbar","chatTabPanel","flex","ChatPanel","useTheme","Drawer","anchor","Box","box","borderTop","paddingLeft","paddingTop","paddingBottom","paddingRight","ChatSendPanel","onSend","multiline","rowsMax","InputLabelProps","shrink","useTextField","setValue","error","setError","empty","trimValue","trim","setTimeout","clear","bind","messagesContainer","overflowX","overflowY","Chat","messageTextField","m","ChatMessage","name","time","justify","createStyles","main","root","chatOpened","isChatOpened","isNewMessages","openChat","closeChat","enableMsgBadge","payload","disableMsgBadge","localVideoRef","remoteVideoRef","useEffect","setAudio","setVideo","messages","length","sendMessage","map","msg","fromID","App","useRef","peerRef","connRef","localStream","setId","speaking","setSpeaking","setMessages","generatedId","uuidv4","current","Peer","on","conn","data","call","navigator","mediaDevices","getUserMedia","then","stream","answer","remoteStream","srcObject","disconnect","close","window","location","reload","peerId","Promise","reject","date","Date","hours","getHours","toString","minutes","getMinutes","currentTime","send","getAudioTracks","forEach","track","enabled","getVideoTracks","usePeer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74745761.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 110;","import { useState } from 'react'\nimport copy from 'clipboard-copy'\n\nimport {\n  InputAdornment,\n  IconButton,\n  TextField,\n  Snackbar,\n} from '@material-ui/core'\n\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined'\nimport CloseIcon from '@material-ui/icons/Close'\n\ntype ClipboardFieldProps = {\n  text: string\n}\n\nexport const ClipboardField = ({ text }: ClipboardFieldProps) => {\n  const [snackbarOpened, setSnackbarOpened] = useState<boolean>(false)\n\n  const copyToClipboard = () => {\n    copy(text)\n    setSnackbarOpened(true)\n  }\n\n  const handleClose = () => {\n    setSnackbarOpened(false)\n  }\n\n  return (\n    <>\n      <TextField\n        type='text'\n        value={text}\n        fullWidth={true}\n        disabled\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>\n              <IconButton\n                aria-label='copy to clipboard'\n                onClick={copyToClipboard}\n                edge='end'\n              >\n                <FileCopyOutlinedIcon />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      <Snackbar\n        open={snackbarOpened}\n        autoHideDuration={3000}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        message='Скопировано'\n        action={\n          <IconButton\n            size='small'\n            aria-label='close'\n            color='inherit'\n            onClick={handleClose}\n          >\n            <CloseIcon fontSize='small' />\n          </IconButton>\n        }\n      />\n    </>\n  )\n}","import { useState } from 'react'\n\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Container,\n  CssBaseline,\n  Backdrop,\n  CircularProgress,\n  TextField,\n  IconButton,\n} from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport { ClipboardField } from '../components/ClipboardField'\nimport CallIcon from '@material-ui/icons/Call'\nimport { PeerHook } from '../hooks/usePeer'\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: '100vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    padding: theme.spacing(5),\n    marginTop: -theme.spacing(20),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n}))\n\ntype StartPageProps = {\n  peer: PeerHook\n}\n\nexport function StartPage({ peer }: StartPageProps) {\n  const classes = useStyles()\n\n  const [backdropOpened, setBackdropOpened] = useState<boolean>(false)\n\n  const [remotePeerId, setRemotePeerId] = useState<string>('')\n\n  const changeRemotePeerId = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const text = e.target.value.replaceAll(' ', '')\n    setRemotePeerId(text)\n  }\n\n  const call = () => {\n    setBackdropOpened(true)\n    peer\n      .callUser(remotePeerId)\n      .catch((reason) => alert(reason))\n      .finally(() => setBackdropOpened(false))\n  }\n\n  const endCall = () => {\n    peer.endCall()\n    setBackdropOpened(false)\n  }\n\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth='sm' className={classes.container}>\n        <Paper className={classes.paper} variant={'outlined'}>\n          <Grid container spacing={2} direction={'column'}>\n            <Grid item>\n              <Typography variant='h5' gutterBottom>\n                Начните звонок\n              </Typography>\n\n              <TextField\n                value={remotePeerId}\n                onChange={changeRemotePeerId}\n                label='ID собеседника'\n              />\n\n              <IconButton color='primary' onClick={call}>\n                <CallIcon />\n              </IconButton>\n            </Grid>\n\n            <Grid item>\n              <Typography variant='overline' display='block' gutterBottom>\n                или поделитесь своим <b>ID</b>\n              </Typography>\n\n              <ClipboardField text={peer.id} />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <Backdrop className={classes.backdrop} open={backdropOpened} onClick={endCall}>\n          <CircularProgress color='inherit' />\n          \n          <Typography>\n            Звоним...\n          </Typography>\n        </Backdrop>\n      </Container>\n    </>\n  )\n}\n","import React, {useState} from 'react'\nimport {IconButton} from \"@material-ui/core\"\n\ntype RoundSwitchProps = {\n  iconOn: React.ReactNode,\n  iconOff: React.ReactNode,\n  initialValue: boolean,\n  toggle: (() => void),\n}\n\nexport function RoundSwitcher({iconOn, iconOff, initialValue, toggle}: RoundSwitchProps) {\n\n  const [isOn, setIsOn] = useState<boolean>(initialValue)\n\n  const onClick = () => {\n    setIsOn(!isOn)\n    toggle()\n  }\n\n  return (\n    <IconButton color={isOn ? 'primary' : 'secondary'} onClick={onClick}>\n      {isOn ? iconOn : iconOff}\n    </IconButton>\n  )\n}","export const getDevicesState = (store: any) => {\n  return store.devices\n}\n\nexport const getChatState = (store: any) => {\n  return store.chat\n}\n\nexport const isAudioEnabled = (store: any) => {\n  const state = getDevicesState(store)\n  return state ? state.audio : false\n}\n\nexport const isVideoEnabled = (store: any) => {\n  const state = getDevicesState(store)\n  return state ? state.video : false\n}\n\nexport const isChatOpened = (store: any) => {\n  const state = getChatState(store)\n  return state ? state.chatOpened : false\n}\n\nexport const isNewMessages = (store: any) => {\n  const state = getChatState(store)\n  return state ? state.newMessages : false\n}","export const TOGGLE_AUDIO = 'TOGGLE_MICRO'\nexport const TOGGLE_VIDEO = 'TOGGLE_VIDEO'\n\nexport const OPEN_CHAT = 'OPEN_CHAT'\nexport const CLOSE_CHAT = 'CLOSE_CHAT'\nexport const ENABLE_MSG_BADGE = 'ENABLE_MSG_BADGE'\nexport const DISABLE_MSG_BADGE = 'DISABLE_MSG_BADGE'","import { CLOSE_CHAT, DISABLE_MSG_BADGE, ENABLE_MSG_BADGE, OPEN_CHAT, TOGGLE_AUDIO, TOGGLE_VIDEO } from './actionTypes'\n\nexport type Action = {\n  type: string\n  payload?: any\n}\n\nexport const toggleAudio = (): Action => ({\n  type: TOGGLE_AUDIO,\n})\n\nexport const toggleVideo = (): Action => ({\n  type: TOGGLE_VIDEO,\n})\n\nexport const openChat = (): Action => ({\n  type: OPEN_CHAT,\n})\n\nexport const closeChat = (): Action => ({\n  type: CLOSE_CHAT,\n})\n\nexport const enableMsgBadge = (value: boolean): Action => ({\n  type: ENABLE_MSG_BADGE,\n  payload: value,\n})\n\nexport const disableMsgBadge = (): Action => ({\n  type: DISABLE_MSG_BADGE,\n})","import { makeStyles, Theme } from '@material-ui/core/styles'\nimport { Badge, Divider, Grid, IconButton } from '@material-ui/core'\nimport { RoundSwitcher } from './RoundSwitcher'\nimport MicNoneOutlinedIcon from '@material-ui/icons/MicNoneOutlined'\nimport MicOffOutlinedIcon from '@material-ui/icons/MicOffOutlined'\nimport VideocamOutlinedIcon from '@material-ui/icons/VideocamOutlined'\nimport VideocamOffOutlinedIcon from '@material-ui/icons/VideocamOffOutlined'\nimport TextsmsOutlinedIcon from '@material-ui/icons/TextsmsOutlined'\nimport CallEndIcon from '@material-ui/icons/CallEnd'\nimport { isAudioEnabled, isVideoEnabled } from '../redux/selectors'\nimport { toggleAudio, toggleVideo } from '../redux/actions'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  panel: {\n    position: 'absolute',\n    bottom: '15px',\n    background: 'white',\n    borderRadius: '7px',\n    width: 'auto',\n    margin: 'auto',\n  },\n}))\n\ntype BottomPanelProps = {\n  toggleChatOpened: () => void\n  audioEnabled: boolean\n  videoEnabled: boolean\n  toggleAudio: () => void\n  toggleVideo: () => void\n  endCall: () => void\n  newMessages: boolean\n}\n\nfunction BottomPanel({\n  toggleChatOpened,\n  audioEnabled,\n  videoEnabled,\n  toggleAudio,\n  toggleVideo,\n  endCall,\n  newMessages,\n}: BottomPanelProps) {\n  const classes = useStyles()\n\n  return (\n    <Grid className={classes.panel} item container>\n      <RoundSwitcher\n        iconOn={<MicNoneOutlinedIcon />}\n        iconOff={<MicOffOutlinedIcon />}\n        initialValue={audioEnabled}\n        toggle={toggleAudio}\n      />\n\n      <RoundSwitcher\n        iconOn={<VideocamOutlinedIcon />}\n        iconOff={<VideocamOffOutlinedIcon />}\n        initialValue={videoEnabled}\n        toggle={toggleVideo}\n      />\n\n      <Divider orientation='vertical' flexItem />\n\n      <IconButton color={'secondary'} onClick={endCall}>\n        <CallEndIcon />\n      </IconButton>\n\n      <IconButton color={'default'} onClick={toggleChatOpened}>\n        <Badge color='secondary' variant='dot' invisible={!newMessages}>\n          <TextsmsOutlinedIcon />\n        </Badge>\n      </IconButton>\n    </Grid>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  const audioEnabled = isAudioEnabled(state)\n  const videoEnabled = isVideoEnabled(state)\n\n  return { audioEnabled, videoEnabled, toggleAudio, toggleVideo }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    toggleAudio: () => dispatch(toggleAudio()),\n    toggleVideo: () => dispatch(toggleVideo()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BottomPanel)\n","import React, { ForwardedRef } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  video: {\n    width: '200px',\n    position: 'absolute',\n    top: '15px',\n    left: '15px',\n    objectFit: 'cover',\n    backgroundColor: '#263238',\n    borderRadius: '10px',\n    boxShadow: '0 0 15px 5px #151515',\n  },\n}))\n\nexport const LocalVideo = React.forwardRef((props, ref: ForwardedRef<HTMLVideoElement>) => {\n  const classes = useStyles()\n  \n  return <video {...props} muted ref={ref} autoPlay className={classes.video} />\n})\n","import React, { ForwardedRef } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  video: {\n    width: '100%',\n    height: 'auto',\n    maxHeight: '100%',\n    // objectFit: 'cover',\n    // backgroundColor: '#263238',\n    // margin: 'auto',\n  },\n}))\n\nexport const FullSizeVideo = React.forwardRef(\n  (props, ref: ForwardedRef<HTMLVideoElement>) => {\n    const classes = useStyles()\n\n    return <video {...props} ref={ref} autoPlay className={classes.video} />\n  }\n)\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport Divider from '@material-ui/core/Divider'\nimport { Drawer, Box } from '@material-ui/core'\nimport { makeStyles, Theme, useTheme } from '@material-ui/core/styles'\n\nexport const drawerWidth = 310\n\ntype TabPanelProps = {\n  children?: React.ReactNode\n  index: any\n  value: any\n  className?: string\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && children}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    overflow: 'hidden',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n  },\n  chatTabPanel: {\n    display: 'flex',\n    flex: '1',\n    overflow: 'hidden',\n  },\n}))\n\ntype ChatDrawerProps = {\n  open: boolean\n  onClose: () => void\n  children: React.ReactNode\n}\n\nexport function ChatPanel({ open, onClose, children }: ChatDrawerProps) {\n  const classes = useStyles()\n  const theme = useTheme()\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      anchor='right'\n      open={open}\n      onClose={onClose}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <Box>\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={onClose}>\n            {theme.direction === 'rtl' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n      </Box>\n\n      <TabPanel value={0} index={0} className={classes.chatTabPanel}>\n        {children}\n      </TabPanel>\n    </Drawer>\n  )\n}","import { Box, IconButton, TextField } from '@material-ui/core'\nimport React, { ChangeEvent } from 'react'\n\nimport SendIcon from '@material-ui/icons/Send'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  box: {\n    // position: 'sticky',\n    display: 'flex',\n    // bottom: 0,\n    backgroundColor: 'white',\n    borderTop: '1px solid #eaeaea',\n    width: '100%',\n    paddingLeft: theme.spacing(2),\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n}))\n\ntype ChatSendPanelProps = {\n  value: string\n  onChange: (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => void\n  label: string\n  onSend: (text: string) => void\n}\n\nfunction ChatSendPanel({ value, onChange, label, onSend }: ChatSendPanelProps) {\n  const classes = useStyles()\n\n  return (\n    <Box className={classes.box}>\n      <TextField\n        label={label}\n        fullWidth\n        multiline\n        rowsMax={4}\n        value={value}\n        onChange={onChange}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <IconButton color={'primary'} onClick={() => onSend(value)}>\n        <SendIcon />\n      </IconButton>\n    </Box>\n  )\n}\n\nexport default ChatSendPanel\n","import {ChangeEvent, useState} from \"react\";\n\nconst useTextField = (label: string, initialValue: string = '') => {\n  const [value, setValue] = useState<string>(initialValue);\n  const [error, setError] = useState<boolean>(false);\n\n  const onChange = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    setValue(e.target.value);\n    setError(false);\n  };\n\n  const empty = (): boolean => {\n    const trimValue = value.trim();\n    return trimValue === '' || trimValue === initialValue;\n  };\n\n  const alert = () => {\n    setError(true);\n    setValue(value.trim());\n    setTimeout(() => setError(false), 2000);\n  };\n\n  const clear = () => {\n    setValue('')\n  }\n\n  return {\n    bind: {\n      label,\n      value,\n      error,\n      onChange,\n    },\n    empty,\n    value: value.trim(),\n    alert,\n    clear,\n  };\n};\n\nexport default useTextField;","import {Box, Grid} from \"@material-ui/core\";\nimport {makeStyles, Theme} from \"@material-ui/core/styles\";\nimport ChatSendPanel from \"./ChatSendPanel\";\nimport useTextField from \"../hooks/useTextField\";\nimport React from \"react\"\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  chat: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: '1',\n  },\n  messagesContainer: {\n    flex: '1',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'safe flex-start',\n    overflowX: 'hidden',\n    overflowY: 'auto',\n  }\n}));\n\ntype ChatProps = {\n  children?: React.ReactNode,\n  onSend: (text: string) => void,\n}\n\nexport function Chat({children, onSend}: ChatProps) {\n  const classes = useStyles();\n  const messageTextField = useTextField('Сообщение');\n\n  const send = (text: string) => {\n    onSend(text)\n    messageTextField.clear()\n  }\n\n  return (\n    <Box className={classes.chat}>\n      <Box className={classes.messagesContainer} m={2}>\n        <Grid container spacing={2}>\n          {children}\n        </Grid>\n      </Box>\n\n      <ChatSendPanel {...messageTextField.bind} onSend={send}/>\n    </Box>\n  );\n}","import { Grid, Typography } from '@material-ui/core'\n\ntype ChatMessageProps = {\n  name: string\n  text: string\n  time: string\n}\n\nfunction ChatMessage({ name, text, time }: ChatMessageProps) {\n  return (\n    <Grid item container direction={'column'}>\n      <Grid item container direction={'row'} justify={'space-between'}>\n        <Typography variant={'subtitle2'}>{name}</Typography>\n        <Typography variant={'caption'}>{time}</Typography>\n      </Grid>\n\n      <Grid item>{text}</Grid>\n    </Grid>\n  )\n}\n\nexport default ChatMessage\n","import React from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport BottomPanel from '../components/BottomPanel'\nimport { PeerHook } from '../hooks/usePeer'\nimport { LocalVideo } from '../components/LocalVideo'\nimport { FullSizeVideo } from '../components/FullSizeVideo'\nimport { ChatPanel } from '../components/ChatPanel'\nimport { Chat } from '../components/Chat'\nimport ChatMessage from '../components/ChatMessage'\nimport { connect } from 'react-redux'\nimport {\n  isAudioEnabled,\n  isChatOpened,\n  isNewMessages,\n  isVideoEnabled,\n} from '../redux/selectors'\nimport { useEffect } from 'react'\nimport {\n  openChat,\n  closeChat,\n  enableMsgBadge,\n  disableMsgBadge,\n} from '../redux/actions'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      display: 'flex',\n      width: '100%',\n      height: '100%',\n      backgroundColor: '#171717',\n    },\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      alignItems: 'center',\n    },\n  })\n)\n\ntype MeetingPageProps = {\n  peer: PeerHook\n  localVideoRef: React.RefObject<HTMLVideoElement>\n  remoteVideoRef: React.RefObject<HTMLVideoElement>\n  audioEnabled: boolean\n  videoEnabled: boolean\n  chatOpened: boolean\n  newMessages: boolean\n  openChat: () => void\n  closeChat: () => void\n  enableMsgBadge: (value: boolean) => void\n  disableMsgBadge: () => void\n}\n\nfunction MeetingPage({\n  peer,\n  localVideoRef,\n  remoteVideoRef,\n  audioEnabled,\n  videoEnabled,\n  chatOpened,\n  newMessages,\n  openChat,\n  closeChat,\n  enableMsgBadge,\n  disableMsgBadge,\n}: MeetingPageProps) {\n  const classes = useStyles()\n\n  useEffect(() => {\n    peer.setAudio(audioEnabled)\n  }, [peer, audioEnabled])\n\n  useEffect(() => {\n    peer.setVideo(videoEnabled)\n  }, [peer, videoEnabled])\n\n  useEffect(() => {\n    enableMsgBadge(peer.messages.length !== 0)\n  }, [peer.messages])\n\n  const toggleChat = () => {\n    openChat()\n    disableMsgBadge()\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <main className={classes.main}>\n        <LocalVideo ref={localVideoRef} />\n        <FullSizeVideo ref={remoteVideoRef} />\n      </main>\n\n      <ChatPanel open={chatOpened} onClose={closeChat}>\n        <Chat onSend={(text) => peer.sendMessage(text)}>\n          {peer.messages.map((msg) => (\n            <ChatMessage\n              name={peer.id === msg.fromID ? 'Вы' : 'Собеседник'}\n              key={msg.id}\n              text={msg.text}\n              time={msg.time}\n            />\n          ))}\n        </Chat>\n      </ChatPanel>\n\n      <BottomPanel\n        toggleChatOpened={toggleChat}\n        endCall={peer.endCall}\n        newMessages={newMessages}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  const audioEnabled = isAudioEnabled(state)\n  const videoEnabled = isVideoEnabled(state)\n  const chatOpened = isChatOpened(state)\n  const newMessages = isNewMessages(state)\n\n  return { audioEnabled, videoEnabled, chatOpened, newMessages }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    openChat: () => dispatch(openChat()),\n    closeChat: () => dispatch(closeChat()),\n    enableMsgBadge: (value: boolean) => dispatch(enableMsgBadge(value)),\n    disableMsgBadge: () => dispatch(disableMsgBadge()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetingPage)\n","import { StartPage } from './pages/StartPage'\nimport MeetingPage from './pages/MeetingPage'\nimport { usePeer } from './hooks/usePeer'\nimport { useRef } from 'react'\n\nfunction App() {\n  const localVideoRef = useRef<HTMLVideoElement | null>(null)\n  const remoteVideoRef = useRef<HTMLVideoElement | null>(null)\n  const peer = usePeer(localVideoRef, remoteVideoRef)\n\n  return !peer.speaking ? (\n    <StartPage peer={peer} />\n  ) : (\n    <MeetingPage\n      peer={peer}\n      localVideoRef={localVideoRef}\n      remoteVideoRef={remoteVideoRef}\n    />\n  )\n}\n\nexport default App\n","import Peer, { DataConnection } from 'peerjs'\nimport { useEffect, useRef, useState } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport type PeerHook = {\n  id: string\n  callUser: (peerId: string) => Promise<boolean>\n  speaking: boolean\n  messages: Message[]\n  sendMessage: (text: string) => void\n  endCall: () => void\n  setAudio: (value: boolean) => void\n  setVideo: (value: boolean) => void\n}\n\ntype UsePeer = {\n  (\n    localVideoRef: React.RefObject<HTMLVideoElement>,\n    remoteVideoRef: React.RefObject<HTMLVideoElement>\n  ): PeerHook\n}\n\ntype Message = {\n  id: string\n  fromID: string\n  text: string\n  time: string\n}\n\nexport const usePeer: UsePeer = (localVideoRef, remoteVideoRef) => {\n  const peerRef = useRef<Peer | null>(null)\n  const connRef = useRef<DataConnection | null>(null)\n  const localStream = useRef<MediaStream | null>(null)\n\n  const [id, setId] = useState<string>('...')\n  const [speaking, setSpeaking] = useState(false)\n  const [messages, setMessages] = useState<Message[]>([])\n\n  useEffect(() => {\n    const generatedId = uuidv4()\n\n    setId(generatedId)\n\n    peerRef.current = new Peer(generatedId)\n\n    peerRef.current.on('connection', (conn) => {\n      connRef.current = conn\n\n      connRef.current.on('data', (data) => {\n        const msg: Message = data\n        setMessages((messages) => [...messages, msg])\n      })\n    })\n\n    peerRef.current.on('call', (call) => {\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: true })\n        .then((stream) => {\n          localStream.current = stream\n\n          call.answer(stream)\n          call.on('stream', (remoteStream) => {\n            setSpeaking(true)\n\n            if (remoteVideoRef.current) {\n              remoteVideoRef.current.srcObject = remoteStream\n            }\n\n            if (localVideoRef.current) {\n              localVideoRef.current.srcObject = stream\n            }\n          })\n\n          call.on('close', () => {\n            endCall()\n          })\n        })\n        .catch(() => {\n          endCall()\n        })\n    })\n\n    return () => peerRef.current?.disconnect()\n  }, [localVideoRef, remoteVideoRef])\n\n  const callUser = (peerId: string) => {\n    return new Promise<boolean>((resolve, reject) => {\n      if (!peerRef.current) {\n        alert('Не удалось создать пир')\n        return\n      }\n\n      connRef.current = peerRef.current.connect(peerId)\n\n      if (!connRef.current) {\n        reject(new Error('Не удается начать звонок, обновите страницу'))\n        return\n      }\n\n      connRef.current.on('data', (data) => {\n        const msg: Message = data\n        setMessages((messages) => [...messages, msg])\n      })\n\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: true })\n        .then((stream) => {\n          localStream.current = stream\n\n          if (!peerRef.current) {\n            alert('Не удалось создать пир')\n            return\n          }\n\n          const call = peerRef.current.call(peerId, stream)\n\n          call.on('stream', (remoteStream) => {\n            setSpeaking(true)\n\n            if (remoteVideoRef.current) {\n              remoteVideoRef.current.srcObject = remoteStream\n            }\n\n            if (localVideoRef.current) {\n              localVideoRef.current.srcObject = stream\n            }\n\n            resolve(true)\n          })\n\n          call.on('close', () => {\n            endCall()\n          })\n        })\n        .catch(() => {\n          setSpeaking(false)\n          reject(new Error('Разрешите доступ к устройствам'))\n        })\n    })\n  }\n\n  const sendMessage = (text: string) => {\n    const currentTime = () => {\n      const date = new Date()\n\n      let hours = date.getHours().toString()\n      let minutes = date.getMinutes().toString()\n\n      if (hours.length < 2) {\n        hours = '0' + hours\n      }\n\n      if (minutes.length < 2) {\n        minutes = '0' + minutes\n      }\n\n      return `${hours}:${minutes}`\n    }\n\n    const msg = {\n      id: uuidv4(),\n      fromID: id,\n      text,\n      time: currentTime(),\n    }\n\n    setMessages((messages) => [...messages, msg])\n\n    connRef.current?.send(msg)\n  }\n\n  const endCall = () => {\n    connRef.current?.close()\n    peerRef.current?.disconnect()\n    window.location.reload()\n  }\n\n  const setAudio = (value: boolean) => {\n    localStream.current?.getAudioTracks().forEach(track => track.enabled = value)\n  }\n\n  const setVideo = (value: boolean) => {\n    localStream.current?.getVideoTracks().forEach(track => track.enabled = value)\n  }\n\n  return {\n    id,\n    callUser,\n    speaking,\n    messages,\n    sendMessage,\n    endCall,\n    setAudio,\n    setVideo,\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { TOGGLE_AUDIO, TOGGLE_VIDEO } from '../actionTypes'\nimport { Action } from '../actions'\n\nconst initialState = {\n  audio: true,\n  video: true,\n}\n\ntype State = {\n  audio: boolean\n  video: boolean\n}\n\nexport function devices(state: State = initialState, action: Action) {\n  switch (action.type) {\n    case TOGGLE_AUDIO: {\n      return {\n        ...state,\n        audio: !state.audio,\n      }\n    }\n    case TOGGLE_VIDEO: {\n      return {\n        ...state,\n        video: !state.video,\n      }\n    }\n    default:\n      return state\n  }\n}\n","import {\n  OPEN_CHAT,\n  CLOSE_CHAT,\n  ENABLE_MSG_BADGE,\n  DISABLE_MSG_BADGE,\n} from '../actionTypes'\nimport { Action } from '../actions'\n\nconst initialState = {\n  chatOpened: false,\n  newMessages: false,\n}\n\ntype State = {\n  chatOpened: boolean\n  newMessages: boolean\n}\n\nexport function chat(state: State = initialState, action: Action) {\n  switch (action.type) {\n    case OPEN_CHAT:\n      return { ...state, chatOpened: true }\n    case CLOSE_CHAT:\n      return { ...state, chatOpened: false }\n    case ENABLE_MSG_BADGE:\n      return { ...state, newMessages: !state.chatOpened && action.payload }\n    case DISABLE_MSG_BADGE:\n      return { ...state, newMessages: false }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { devices } from './devices'\nimport { chat } from './chat'\n\nexport default combineReducers({ devices, chat })\n","import { createStore } from 'redux'\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer)\n\ndeclare global {\n  interface Window {\n    store: any\n  }\n}\n\nwindow.store = store\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport { Provider } from 'react-redux'\n\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}